@model List<WMKancelariapp.Models.ViewModels.DeadlineDtoViewModel>

@{
    var parentViewIsDeadlineIndex = this.Context.GetRouteData().Values["controller"].ToString() == "Deadlines";
}
<table class="table table-striped table-hover table-sm align-middle" id="resultsTable">
    @if (!Model.Any())
    {
        @("brak")
    }
    else
    {
        <thead class="table-primary">
            <tr>
                <th scope="col">
                    <div class="filter-section">
                        <input type="text" id="descriptionInput" onkeyup="filterNames('descriptionInput', 'resultsTable', 0)" placeholder="Filtruj po opisie" class="filter-text-input" /><br />
                    </div>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Description)
                </th>
                <th scope="col">
                    <div class="filter-section">
                        <input type="text" id="caseNameInput" onkeyup="filterNames('caseNameInput', 'resultsTable', 1)" placeholder="Filtruj po sprawie" class="filter-text-input" /><br />
                    </div>
                    @Html.DisplayNameFor(model=>model.FirstOrDefault().Case)
                </th>
                <th scope="col" class="text-center">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Date)
                </th>
                <th scope="col" class="text-center">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().IsCompleted)
                </th>
                @if (parentViewIsDeadlineIndex)
                {
                    <th>Akcje</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <div class="text-truncate" style="max-width: 40vw">
                            <a asp-action="Details" asp-controller="Deadlines" asp-route-id="@item.DeadlineId">
                                @Html.DisplayFor(modelItem => item.Description)
                            </a>
                        </div>
                    </td>
                    <td>
                        <div class="text-truncate" style="max-width: 40vw">
                            <a asp-action="Details" asp-controller="Cases" asp-route-id="@item.Case.Id">@Html.DisplayFor(modelItem=> item.Case.Name)</a>
                        </div>
                    </td>
                    <td class="text-center">
                        @{
                            var date = item.Date;
                            var isForToday = date.Date == DateTime.Today;
                            var isForTomorrow = date.Date == DateTime.Today.AddDays(1);
                            var isPastDeadline = date.Date < DateTime.Today;
                            var isTimeDefault = date.TimeOfDay.Ticks == 0;

                            <div class="@( isForToday || isForTomorrow || isPastDeadline ? "text-danger" : "")@(isPastDeadline ? " fw-bold" : "")">
                                @(isTimeDefault ? date.ToShortDateString() : $"{date.ToShortDateString()} - {date.ToShortTimeString()}")
                            </div>
                        }
                    </td>
                    <td class="text-center">

                        <a class="btn-template @(item.IsCompleted ? "button-additional" : "button-alert")" data-bs-toggle="modal" data-bs-target="#deadlineStatusModal"
                                data-case="@item.Case.Name" data-description="@item.Description" data-deadline-id="@item.DeadlineId" data-status="@(item.IsCompleted ? "do zrobienia" : "zrobione")">@(item.IsCompleted ? "Wykonane" : "Do zrobienia")
                            </a>
                    </td>
                    @if (parentViewIsDeadlineIndex)
                    {
                        <td>
                            @await Html.PartialAsync("_ActionButtons", $"{item.DeadlineId}|Edit|Details|Delete|deleteText=terminu z opisem<br/><b>{item.Description}</b><br/>w sprawie<br/><b>{item.Case.Name}</b><br/>z datą do<br/><b>{item.Date}</b>")
                        </td>
                    }
                </tr>
            }
        </tbody>
    }
</table>

<div class="modal fade" id="deadlineStatusModal" tabindex="-1" role="dialog" aria-labelledby="deadlineStatusModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deadlineStatusModalLabel">Zmiana statusu</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                </button>
            </div>
            <div class="modal-body text-center">
                    Czy zmienić status dla <br/>
                    <b><div id="deadline-description"></div></b>
                    w sprawie<br/>
                    <b><div id="deadline-case"></div></b>
                    na<br/>
                    <b><span id="deadline-status"></span></b>?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn-template button-normal" data-bs-dismiss="modal">Anuluj</button>
                <a class="btn-template button-alert" id="deadline-action" asp-action="RevertStatus" asp-controller="Deadlines">Wykonaj</a>
            </div>
        </div>
    </div>
</div>

<script src="~/js/deadlinesTable.js"></script>