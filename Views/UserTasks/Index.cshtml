@using WMKancelariapp.Extensions
@using Microsoft.IdentityModel.Tokens
@model WMKancelariapp.Models.ViewModels.UserTaskIndexViewModel

@{
    ViewData["Title"] = "Czynności";
}
<h2>Czynności</h2>

<p>
    <a class="btn-template button-create" asp-action="Create">Nowa czynność</a>
    <a class="btn-template button-normal" id="filter-toggle">Filtry</a>
    <a class="btn-template button-additional" asp-action="Types">Kategorie</a>
</p>

<table class="table table-striped table-hover table-sm align-middle" id="resultsTable">
    <thead class="table-primary">
        <tr>
            <th>
                @Html.DisplayNameFor(x=> x.AllUserTasks.FirstOrDefault().TaskType)
            </th>
            <th>
                <div class="filter-section">
                    <input type="text" id="caseInput" onkeyup="filterNames('caseInput', 'resultsTable', 1)" placeholder="Filtruj po sprawie" class="filter-text-input" /><br />
                </div>
                @Html.DisplayNameFor(x=> x.AllUserTasks.FirstOrDefault().Case)
            </th>
            <th>
                <div class="filter-section">
                    <input type="text" id="descriptionInput" onkeyup="filterNames('descriptionInput', 'resultsTable', 2)" placeholder="Filtruj po opisie" class="filter-text-input" /><br />
                </div>
                @Html.DisplayNameFor(x=> x.AllUserTasks.FirstOrDefault().Description)
            </th>
            <th>
                <div class="filter-section">
                    <input type="text" id="clientNameInput" onkeyup="filterNames('clientNameInput', 'resultsTable', 3)" placeholder="Filtruj po kliencie" class="filter-text-input" /><br />
                </div>
                @Html.DisplayNameFor(x=> x.AllUserTasks.FirstOrDefault().Client)
            </th>
            <th>
                Wykonawca
            </th>
            <th>
                @Html.DisplayNameFor(x=> x.AllUserTasks.FirstOrDefault().Duration)
            </th>
            <th>
                Naliczenie
            </th>
            <th>
                Opcje
            </th>

        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.AllUserTasks)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.TaskType.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Case.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    <a asp-action="Details" asp-controller="Clients" asp-route-id="@item.Client?.Id">
                        @Html.DisplayFor(modelItem => item.Client.Name) @Html.DisplayFor(modelItem => item.Client.Surname)
                    </a>
                </td>
                <td>
                    @item.User.UserName.RemoveEmailDomain()
                </td>
                <td>
                    @item.DurationMinutes?.ConvertTimeToMinutes().ConvertMinutesToStringDisplay()
                </td>
                <td>
                    @(item.Value switch
                    {
                        0 => "brak",
                        -1 => @item.Case == null ?
                            Html.Raw($"<a class=\"btn-template button-create\" href=\"{Url.Action("Edit", "UserTasks", new { id = @item.UserTaskId })}\">§</a>Przypisz sprawę")
                            : Html.Raw($"<a class=\"btn-template button-navigation\" href=\"{Url.Action("Update", "HourlyPrices", new { id = @item.Case.Id })}\">$</a>Dodaj stawkę"),
                        _ => $"{item.Value} zł"
                    })

                </td>
                <td>
                    @{
                        var deleteText = ($"czynności<br/>typu <b>{item.TaskType.Name}</b>" +
                        $"{(item.Case == null ? "<br/>nieprzydzielonej do żadnej sprawy" : $"<br/>dla sprawy <b>{item.Case.Name}</b>")}" +
                        $"{(item.Client == null ? "</br>nieprzydzielonej do żadnego klienta" : $"<br/>u klienta <b>{item.Client.Name} {item.Client.Surname}</b>")}");
                    }
                    @await Html.PartialAsync("_ActionButtons", $"{item.UserTaskId}|Edit|Delete|Details|deleteText={deleteText}")
                </td>
            </tr>
        }
    </tbody>
</table>
