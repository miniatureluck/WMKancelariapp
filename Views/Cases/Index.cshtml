@using WMKancelariapp.Extensions
@model WMKancelariapp.Models.ViewModels.CaseIndexViewModel

@{
    ViewData["Title"] = "Sprawy";
}

<h2>Sprawy</h2>

<p>
    <a class="btn-template button-create" asp-action="Create">Nowa sprawa</a>
    <a class="btn-template button-normal" id="filter-toggle">Filtry</a>
</p>

<table class="table table-striped table-hover table-sm align-middle" id="resultsTable">
    <thead class="table-primary">
        <tr>
            <th>
                <div class="filter-section">
                    <input type="text" id="caseNameInput" onkeyup="filterNames('caseNameInput', 'resultsTable', 0)" placeholder="Filtruj po nazwie" class="filter-text-input" /><br />
                </div>
                Nazwa
            </th>
            <th>
                <div class="filter-section">
                    <input type="text" id="descriptionInput" onkeyup="filterNames('descriptionInput', 'resultsTable', 1)" placeholder="Filtruj po opisie" class="filter-text-input" /><br />
                </div>
                Opis
            </th>
            <th>Opiekun</th>
            <th>
                <div class="filter-section">
                    <input type="text" id="clientNameInput" onkeyup="filterNames('clientNameInput', 'resultsTable', 3)" placeholder="Filtruj po kliencie" class="filter-text-input" /><br />
                </div>
                Klient
            </th>
            <th>
                Stawki
            </th>
            <th class="w-auto">Opcje</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.AllCases)
        {
            <tr>
                <td>
                    <a asp-action="Details" asp-route-id="@item.CaseId">@item.Name</a>
                </td>
                <td>
                    @item.Description.Truncate(15)
                </td>
                <td>
                    @item.AssignedUser?.UserName.RemoveEmailDomain()
                </td>
                <td>
                    <a asp-action="Details" asp-controller="Clients" asp-route-id="@item.Client?.Id">@item.Client?.Name @item.Client?.Surname</a>
                </td>
                <td>
                    @if (item.SpecifiedPrices == 0)
                    {
                        @await Html.PartialAsync("_PlusButton", $"HourlyPrices|{item.CaseId}")
                    }
                    else
                    {
                        var completedFractionNumbers = item.PricesCompletionFraction.Split('/');
                        <a class="btn-template button-create" asp-action="Update" asp-controller="HourlyPrices" asp-route-id="@item.CaseId">
                            @if (completedFractionNumbers[0] != completedFractionNumbers[1])
                            {
                            @item.PricesCompletionFraction
                            }
                            else
                            {
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check-lg" viewBox="0 0 16 16">
                                    <path d="M12.736 3.97a.733.733 0 0 1 1.047 0c.286.289.29.756.01 1.05L7.88 12.01a.733.733 0 0 1-1.065.02L3.217 8.384a.757.757 0 0 1 0-1.06.733.733 0 0 1 1.047 0l3.052 3.093 5.4-6.425a.247.247 0 0 1 .02-.022Z"/>
                                </svg>
                            }
                        </a>
                    }
                </td>
                <td>
                    @{
                        var deleteText = ($"sprawy<br/><b>{item.Name}</b>" +
                                          $"{(item.Client == null ? "<br/>nieprzydzielonej do żadnego klienta" : $"<br/>u klienta <b>{item.Client.Name} {item.Client.Surname}</b>")}");
                    }
                    @await Html.PartialAsync("_ActionButtons", $"{item.CaseId}|Details|Edit|Delete|deleteText={deleteText}")

                </td>
            </tr>
        }
    </tbody>
</table>
